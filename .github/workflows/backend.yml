name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - "api/**"
      - ".github/workflows/backend.yml"
  pull_request:
    branches: [main]
    paths:
      - "api/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  MODEL_PATH: "api/models/model.pkl"
  PUBLISH_IMAGES: "false" # set to "true" to push to GHCR
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}/retentionpulse

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('api/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Smoke tests (fastapi clients)
        env:
          PYTHONPATH: ${{ github.workspace }}/api
          MODEL_PATH: ${{ env.MODEL_PATH }}
        run: |
          # If you have tests, they'll run; if not, this won't fail the build.
          pytest -q || echo "No tests or tests failed; continuing for now."

  docker:
    name: Build (and optionally push) images
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: ${{ env.PUBLISH_IMAGES == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Prediction service
      - name: Build prediction_service image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/prediction_service/Dockerfile
          push: ${{ env.PUBLISH_IMAGES == 'true' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-prediction:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-prediction:${{ github.sha }}

      # Explain service
      - name: Build explain_service image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/explain_service/Dockerfile
          push: ${{ env.PUBLISH_IMAGES == 'true' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-explain:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-explain:${{ github.sha }}

      # Gateway service
      - name: Build gateway_service image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/gateway_service/Dockerfile
          push: ${{ env.PUBLISH_IMAGES == 'true' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-gateway:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}-gateway:${{ github.sha }}
